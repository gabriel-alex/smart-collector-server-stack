version: "3"
services:
  influxdb:
    image: influxdb:2.1.1
    container_name: influxdb
    networks: 
      TIG:
        ipv4_address: 172.28.1.1
    restart: always
    hostname: influxdb
    ports:
      - 8086:8086
    env_file: 
      - '.influxdb.env'
    volumes:
      - influxdb-storage:/var/lib/influxdb

  ngrok:
    image: wernight/ngrok:latest
    container_name: ngrok
    # network_mode: host
    networks:
      TIG:
        ipv4_address: 172.28.1.2
    ports: 
      -  4040:4040 
    # environment:
    #   NGROK_PROTOCOL: http
    #   NGROK_PORT: grafana:80
    command: sh -c 'ngrok start --all'
    volumes:
    - ./ngrok:/home/ngrok/.ngrok2/
    depends_on:
    - influxdb
    - grafana
    - node-red

  grafana:
    image: grafana/grafana:8.1.8
    depends_on:
      - influxdb
    container_name: grafana
    restart: always
    networks: 
      TIG:
        ipv4_address: 172.28.1.3
    ports:
      - 80:3000
    links:
      - influxdb:influxdb
    env_file: 
      - '.grafana.env'
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  node-red:
    #image: nodered/node-red:latest
    container_name: nodered
    restart: always
    build: ./nodered
    environment:
     - TZ=Europe/Amsterdam
    ports:
      - 1880:1880 
    volumes:
      - ./nodered/data:/data
    networks: 
      TIG:
        ipv4_address: 172.28.1.4

networks: 
  TIG:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
    # driver: bridge
  # hostTest:
  #   driver: host

volumes:
  grafana-data:
  influxdb-storage:
